package com.aws.sqs.service;



import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import com.amazonaws.services.sqs.AmazonSQS;
import com.amazonaws.services.sqs.AmazonSQSClientBuilder;
import com.amazonaws.services.sqs.model.DeleteMessageRequest;
import com.amazonaws.services.sqs.model.ReceiveMessageRequest;
import com.amazonaws.services.sqs.model.ReceiveMessageResult;
import com.aws.sqs.client.SqsClient;

@Component
public class ReceiveMessage implements Runnable{
	
	private static final Logger LOG = LoggerFactory.getLogger(ReceiveMessage.class);
	
	private SqsClient client;
	
	public ReceiveMessage(SqsClient client) {
		this.client = client;
		
	}
	
	@Override
	@Scheduled(fixedRate = 1000)
	public void run() 
	{
		final AmazonSQS sqs = AmazonSQSClientBuilder.defaultClient();
		final ReceiveMessageRequest receiveMessageRequest =
                new ReceiveMessageRequest(client.getUrl())
                	.withMaxNumberOfMessages(1)
                	.withWaitTimeSeconds(3);
		LOG.info("recieved: "+receiveMessageRequest);
		ReceiveMessageResult result = sqs
				.receiveMessage(client.getUrl());
		LOG.info("start listening", result);
		if(null != result)
			client.getSqsClient().receiveMessage(client.getUrl());
			LOG.info("Receive Message{}", result);
		
		if(null != result.getMessages() && !result.getMessages()
				.isEmpty()) {
			LOG.info("delete message", result.getMessages().get(0).getReceiptHandle());
			client.getSqsClient().deleteMessage(client.getUrl(),
					result.getMessages().get(0).getReceiptHandle());
		}
	}
//	@Scheduled(fixedRate = 1000)
//	public void getMessage() {
//		final AmazonSQS sqs = AmazonSQSClientBuilder.defaultClient();
//        while(true) {
//        	LOG.info("Receiving messages from MyQueue.\n");
//        	final ReceiveMessageRequest receiveMessageRequest =
//                    new ReceiveMessageRequest(sqsURL)
//                    	.withMaxNumberOfMessages(1)
//                    	.withWaitTimeSeconds(3);
//	        final List<com.amazonaws.services.sqs.model.Message> messages = sqs.receiveMessage(receiveMessageRequest)
//	                .getMessages();
//	        for (final com.amazonaws.services.sqs.model.Message message : messages) {
//	        	LOG.debug("Message");
//	        	LOG.debug("  MessageId:     "
//	                    + message.getMessageId());
//	        	LOG.debug("  ReceiptHandle: "
//	                    + message.getReceiptHandle());
//	        	LOG.debug("  MD5OfBody:     "
//	                    + message.getMD5OfBody());
//	        	LOG.debug("  Body:          "
//	                    + message.getBody());
//	            if(!"".equals(message.getBody())) {
//	            	LOG.info("Calling POST /notification to insert records into database");
//		            RestTemplate rest = new RestTemplate();
//		            ResponseEntity<String> companyInfoResponse = rest.postForEntity(notificationUrl, message.getBody(), String.class);
//		            String s = companyInfoResponse.getBody();
//		            
//		            System.out.println("Deleting a message.\n");
//		            final String messageReceiptHandle = messages.get(0).getReceiptHandle();
//		            sqs.deleteMessage(new DeleteMessageRequest(sqsURL,
//		                    messageReceiptHandle));
//		         }
//	        }
//        }
//	}
}
