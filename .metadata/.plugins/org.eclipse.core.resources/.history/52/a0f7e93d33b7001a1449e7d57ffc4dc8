package com.aws.sqs.service;

import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;

import javax.annotation.PostConstruct;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import com.amazonaws.services.sqs.model.ReceiveMessageResult;
import com.aws.sqs.client.SqsClient;

@Component
public class MessageSubscriberService {
	
	private static final Logger LOG = LoggerFactory.getLogger(ReceiveMessage.class);

	@Autowired
	private  SqsClient client;

	@Value("6")
	private int pollingThreads;

	@Value("1000")
	private int pollingRate;

	private ScheduledThreadPoolExecutor executor;


	@PostConstruct
	private void startSqsPoll() {
//		executor = new ScheduledThreadPoolExecutor(pollingThreads);
//		for(int worker = 0; worker < pollingThreads; worker++) {
//			executor.scheduleAtFixedRate(new ReceiveMessage(client),
//				0, pollingRate, TimeUnit.MILLISECONDS);
//		}
		LOG.info("Receive Message{}");
		ReceiveMessageResult result = client.getAmazonSqsClient()
				.receiveMessage(client.getUrl());
		LOG.info("start listening", result);
		if(null == result)
			LOG.info("Receive Message{}", result);		
		if(null != result.getMessages() && !result.getMessages()
				.isEmpty()) {
			LOG.info("delete message", result.getMessages().get(0).getReceiptHandle());
			client.getAmazonSqsClient().deleteMessage(client.getUrl(),
					result.getMessages().get(0).getReceiptHandle());
		}
	}
}
