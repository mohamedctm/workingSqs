package com.example.demo.controller;

import java.util.concurrent.ExecutionException;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.cloud.aws.messaging.core.QueueMessagingTemplate;
import org.springframework.cloud.aws.messaging.listener.Acknowledgment;
import org.springframework.cloud.aws.messaging.listener.SqsMessageDeletionPolicy;
import org.springframework.cloud.aws.messaging.listener.annotation.SqsListener;
import org.springframework.messaging.MessageHeaders;
import org.springframework.messaging.handler.annotation.Headers;
import org.springframework.messaging.support.MessageBuilder;
import org.springframework.scheduling.annotation.Async;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/sqs")
public class SqsController {
	
	private static final Logger LOG = LoggerFactory.getLogger(SqsController.class);
	
	@Autowired
	private QueueMessagingTemplate queueMessagingTemplate;
	
	@Value("${url}")
	private String sqsEndPoint;
	
	private String message1 ="something to send";
	
	@GetMapping 
	public void sendMessage(){
		queueMessagingTemplate.send(sqsEndPoint, MessageBuilder.withPayload(message1).build());
		LOG.info("message sent to aws");

	}
	
//	@SqsListener("sqs") 
//	public void getMessage(String messagex){
//		LOG.info("from aws:" + messagex);
//	}
	
	@Async
	  @SqsListener(value = "${queue-url}", deletionPolicy = SqsMessageDeletionPolicy.NEVER)
	  public void listen(Acknowledgment acknowledgment, String message, @Headers MessageHeaders headers) throws ExecutionException, InterruptedException {
	    String messageId = (String) headers.get("MessageId");
	    acknowledgment.acknowledge().get();
	  }


}
